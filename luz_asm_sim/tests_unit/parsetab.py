
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '5\xffiR\xbf\\\xe4#"O\xd5\xb6\x97\xfa\xbe\x19'
    
_lr_action_items = {'RPAREN':([31,33,],[34,35,]),'STRING':([2,7,24,25,27,],[11,11,11,11,11,]),'DIRECTIVE':([0,4,5,6,8,9,10,19,20,22,23,],[2,-7,-3,2,-1,25,-5,-4,-2,-12,-6,]),'NEWLINE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,30,32,34,35,],[4,10,-14,19,-7,-3,4,-14,-1,23,-5,-18,-15,-19,-22,-13,-9,-23,-17,-4,-2,-11,-12,-6,-14,-14,-10,-8,-16,-20,-21,]),'HEX_NUM':([2,7,24,25,27,],[17,17,17,17,17,]),'COLON':([7,],[22,]),'DEC_NUM':([2,7,24,25,27,],[14,14,14,14,14,]),'LPAREN':([13,14,17,18,],[26,-22,-23,28,]),'COMMA':([11,12,13,14,15,17,18,32,34,35,],[-18,-15,-19,-22,27,-23,-17,-16,-20,-21,]),'ID':([0,2,4,5,6,7,8,9,10,19,20,22,23,24,25,26,27,28,],[7,18,-7,-3,7,18,-1,24,-5,-4,-2,-12,-6,18,18,31,18,33,]),'$end':([4,5,6,8,10,19,20,23,],[-7,-3,0,-1,-5,-4,-2,-6,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'number':([2,7,24,25,27,],[13,13,13,13,13,]),'directive':([0,6,],[3,3,]),'instruction':([0,6,],[1,1,]),'empty_line':([0,6,],[5,5,]),'argument':([2,7,24,25,27,],[12,12,12,12,32,]),'asm_file':([0,],[6,]),'arguments':([2,7,24,25,],[15,15,15,15,]),'arguments_opt':([2,7,24,25,],[16,21,29,30,]),'asm_line':([0,6,],[8,20,]),'label_def':([0,6,],[9,9,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> asm_file","S'",1,None,None,None),
  ('asm_file -> asm_line','asm_file',1,'p_asm_file','../lib/asmlib/asmparser.py',110),
  ('asm_file -> asm_file asm_line','asm_file',2,'p_asm_file','../lib/asmlib/asmparser.py',111),
  ('asm_line -> empty_line','asm_line',1,'p_asm_line_1','../lib/asmlib/asmparser.py',120),
  ('asm_line -> directive NEWLINE','asm_line',2,'p_asm_line_1','../lib/asmlib/asmparser.py',121),
  ('asm_line -> instruction NEWLINE','asm_line',2,'p_asm_line_1','../lib/asmlib/asmparser.py',122),
  ('asm_line -> label_def NEWLINE','asm_line',2,'p_asm_line_2','../lib/asmlib/asmparser.py',127),
  ('empty_line -> NEWLINE','empty_line',1,'p_empty_line','../lib/asmlib/asmparser.py',136),
  ('directive -> label_def DIRECTIVE arguments_opt','directive',3,'p_directive_1','../lib/asmlib/asmparser.py',140),
  ('directive -> DIRECTIVE arguments_opt','directive',2,'p_directive_2','../lib/asmlib/asmparser.py',148),
  ('instruction -> label_def ID arguments_opt','instruction',3,'p_instruction_1','../lib/asmlib/asmparser.py',156),
  ('instruction -> ID arguments_opt','instruction',2,'p_instruction_2','../lib/asmlib/asmparser.py',164),
  ('label_def -> ID COLON','label_def',2,'p_label_def','../lib/asmlib/asmparser.py',172),
  ('arguments_opt -> arguments','arguments_opt',1,'p_arguments_opt','../lib/asmlib/asmparser.py',176),
  ('arguments_opt -> <empty>','arguments_opt',0,'p_arguments_opt','../lib/asmlib/asmparser.py',177),
  ('arguments -> argument','arguments',1,'p_arguments_1','../lib/asmlib/asmparser.py',182),
  ('arguments -> arguments COMMA argument','arguments',3,'p_arguments_2','../lib/asmlib/asmparser.py',186),
  ('argument -> ID','argument',1,'p_argument_1','../lib/asmlib/asmparser.py',190),
  ('argument -> STRING','argument',1,'p_argument_2','../lib/asmlib/asmparser.py',194),
  ('argument -> number','argument',1,'p_argument_3','../lib/asmlib/asmparser.py',198),
  ('argument -> number LPAREN ID RPAREN','argument',4,'p_argument_4','../lib/asmlib/asmparser.py',202),
  ('argument -> ID LPAREN ID RPAREN','argument',4,'p_argument_5','../lib/asmlib/asmparser.py',207),
  ('number -> DEC_NUM','number',1,'p_number','../lib/asmlib/asmparser.py',212),
  ('number -> HEX_NUM','number',1,'p_number','../lib/asmlib/asmparser.py',213),
]
